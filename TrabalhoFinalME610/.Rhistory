#prop = Contagem/n
#return(c(Contagem,n,prop))})}
#nada <- tabelaproporcao(dados_Nada2)
#nada <- rbind(nada,rep("Nada",ncol(nada)))
#nadaqueincomode <- tabelaproporcao(dados_Nadaqueincomode2)
#nadaqueincomode <- rbind(nadaqueincomode,rep("nadaqueincomode",ncol(nadaqueincomode)))
#problematica <- tabelaproporcao(dados_Problematica2)
#problematica <- rbind(problematica,rep("problematica",ncol(problematica)))
#forte <- tabelaproporcao(dados_Forte2)
#forte <- rbind(forte,rep("forte",ncol(forte)))
#tbl_proporcao <- rbind(t(nada),t(nadaqueincomode),t(problematica),t(forte))
#colnames(tbl_proporcao) <- c("Nº de SIM","Total","Proporção de SIM","Intensidade da dor")
#tbl_proporcao <- cbind(rownames(tbl_proporcao),tbl_proporcao)
#tbl_proporcao[,4] <- as.double(tbl_proporcao[,4])
```
```{r}
#point_prop <- ggplot(data = tbl_proporcao, aes(y=tbl_proporcao[,3]))  + geom_point()
#point_prop
```
```{r}
library(plyr)
library(dplyr)
#aux <- sapply(names(dados_base[,11:33]),function(x){ddply(dados_base,~`Intensidade Dor`,summarise,Contagem = sum(`x`),n = length(`x`),prop = Contagem/n)})
#ddply(dados_base,.(`Intensidade Dor`),summarise, nrow)
```
```{r}
#a111 <- ddply(dados_base,~`Intensidade Dor`,summarise,Contagem = sum(dados_base[,11]),n = length(dados_base[,11]),prop = Contagem/n)
#a111
```
```{r}
#tabele <- function(x){ddply(dados_base,.(`Intensidade Dor`),summarise, Contagem = sum(x[,11]), porcetagem = sum(x[,11])/length(x[,11]))}
#tabela <- apply(dados_base[,11:33],2 , function(x){tabele(x)})
#tabela <- apply(dados_base[,11:33],2,function(x){sum(x)/length(x)})
```
```{r}
tabele <- function(i){ddply(dados_base,.(`Intensidade Dor`),summarise, Contagem = sum(`ID`), porcetagem = sum(`ID`)/length(`ID`))}
```
```{r}
proporcao <- function(x){  return(c(soma = sum(x),n = length(x),p = sum(x)/length(x)))}
tb_Forte_alivia <- apply(dados_Forte2[,11:18],2, proporcao)
ordem_Forte_alivia <- order(tb_Forte_alivia[3,]) #ordem crescente dos p
tb_Forte_ordem_alivia <- tb_Forte_alivia[,ordem_Forte_alivia]
tb_Problematica_alivia <- apply(dados_Problematica2[,11:18],2, proporcao)
tb_Problematica_alivia <- tb_Problematica_alivia[,ordem_Forte_alivia]
tb_Nadaqueincomode_alivia <- apply(dados_Nadaqueincomode2[,11:18],2, proporcao)
tb_Nadaqueincomode_alivia <- tb_Nadaqueincomode_alivia[,ordem_Forte_alivia]
tabela_proporcao_alivia <- cbind(tb_Nadaqueincomode_alivia[3,],tb_Problematica_alivia[3,], tb_Forte_alivia[3,])
colnames(tabela_proporcao_alivia) <- c("Nada que incomode","Problemática","Forte")
#só para tirar o (a) dos nomes
rownames(tabela_proporcao_alivia) <- c("Ficar em pé","Caminhar","Bolsa de agua quente","Estar sentada","Banho quente","Estar deitada","Comprimidos e aspirina","Almofada atrás da cadeira")
#xtable(tabela_proporcao[,1:8],digits = 3)
#xtable(tabela_proporcao[,9:23],digits = 3)
#View(tabela_proporcao)
```
```{r}
library(reshape2)
alivia <- melt(tabela_proporcao_alivia)
colnames(alivia) <- c("Pergunta","Intensidade dor","Proporção de sim")
```
```{r}
tb_Forte_agrava <- apply(dados_Forte2[,19:33],2, proporcao)
ordem_Forte_agrava <- order(tb_Forte_agrava[3,]) #ordem crescente dos p
tb_Forte_ordem_agrava <- tb_Forte_agrava[,ordem_Forte_agrava]
tb_Problematica_agrava <- apply(dados_Problematica2[,19:33],2, proporcao)
tb_Problematica_agrava <- tb_Problematica_agrava[,ordem_Forte_agrava]
tb_Nadaqueincomode_agrava <- apply(dados_Nadaqueincomode2[,19:33],2, proporcao)
tb_Nadaqueincomode_agrava <- tb_Nadaqueincomode_agrava[,ordem_Forte_agrava]
tabela_proporcao_agrava <- cbind(tb_Nadaqueincomode_agrava[3,],tb_Problematica_agrava[3,], tb_Forte_agrava[3,])
colnames(tabela_proporcao_agrava) <- c("Nada que incomode","Problemática","Forte")
#xtable(tabela_proporcao[,1:8],digits = 3)
#xtable(tabela_proporcao[,9:23],digits = 3)
#View(tabela_proporcao)
```
```{r}
library(reshape2)
agrava <- melt(tabela_proporcao_agrava)
colnames(agrava) <- c("Pergunta","Intensidade dor","Proporção de sim")
```
```{r}
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = 1,
palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
```
```{r}
treemap(agrava, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Set2",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que agravam a dor em Geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
```
```{r fig.height= 6}
#mapa de arvore para cada nível de dor para alivia a dor
library(treemap)
treemap(alivia, #Your data frame object
index=c("Intensidade dor","Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Set1",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor por nível de dor", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
```
```{r }
#mapa de arvore para cada nível de dor para alivia a dor nível nada que incomode
alivia_nadaqueincomode <- filter(alivia, `Intensidade dor` == "Nada que incomode")
treemap(alivia_nadaqueincomode, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Set1",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor para nível de dor 'Nada que incomode'", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
```
```{r }
#mapa de arvore para cada nível de dor para alivia a dor nível 'Problemática'
alivia_problematica <- filter(alivia, `Intensidade dor` == "Problemática")
treemap(alivia_problematica, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Set1",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor para nível de dor 'Problemática'", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
```
```{r }
#mapa de arvore para cada nível de dor para alivia a dor nível 'Forte'
alivia_forte <- filter(alivia, `Intensidade dor` == "Forte")
treemap(alivia_forte, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Set1",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor para nível de dor 'Forte'", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
```
```{r fig.height= 6}
#mapa de arvore para cada nível de dor em agrava
treemap(agrava, #Your data frame object
index=c("Intensidade dor","Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Set1",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor por nível de dor", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
```
```{r }
#mapa de arvore para cada nível de dor para agrava a dor nível nada que incomode
agrava_nadaqueincomode <- filter(agrava, `Intensidade dor` == "Nada que incomode")
treemap(agrava_nadaqueincomode, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Set1",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que agravam a dor para nível de dor 'Nada que incomode'", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
```
```{r }
#mapa de arvore para cada nível de dor para agrava a dor nível 'Problemática'
agrava_problematica <- filter(agrava, `Intensidade dor` == "Problemática")
treemap(agrava_problematica, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Set1",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que agravam a dor para nível de dor 'Problemática'", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
```
```{r }
#mapa de arvore para cada nível de dor para agrava a dor nível 'Forte'
agrava_forte <- filter(agrava, `Intensidade dor` == "Forte")
treemap(agrava_forte, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Set1",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que agravam a dor para nível de dor 'Forte'", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
```
##Modelo
```{r}
```
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = 1,
palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = 1,
palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = 1,
#palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = 0,
#palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = 1000,
#palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = -1000,
#palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = -1000,
palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = "GNI",
#palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = "GNI",
#palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = "White",
#palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
treemap(agrava, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Set2",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que agravam a dor em Geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = "White",
#palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = "GNI",
#palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = "GNI",
#palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
type = "value",
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = 1,
#palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
type = "value",
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
#vColor = 1,
palette = "http://colorbrewer2.org/?type=sequential&scheme=Greys&n=3",  #Select your color palette from the RColorBrewer presets or make your own.
#type = "value",
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
#vColor = 1,
palette = "Set3",  #Select your color palette from the RColorBrewer presets or make your own.
#type = "value",
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
#vColor = 1,
palette = "Greys",  #Select your color palette from the RColorBrewer presets or make your own.
#type = "value",
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
#vColor = 1,
palette = "Greys",  #Select your color palette from the RColorBrewer presets or make your own.
palette.HCL(hue_perm = FALSE),
#type = "value",
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
#vColor = 1,
#palette = "Greys",  #Select your color palette from the RColorBrewer presets or make your own.
palette.HCL(hue_perm = FALSE),
#type = "value",
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
#vColor = 1,
palette = "Greys",  #Select your color palette from the RColorBrewer presets or make your own.
#type = "value",
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
treemap(agrava, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Greys",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que agravam a dor em Geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
treemap(agrava, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "NULL",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que agravam a dor em Geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
#mapa de arvore para cada nível de dor para alivia a dor
library(treemap)
treemap(alivia, #Your data frame object
index=c("Intensidade dor","Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
#vColor = "Intensidade dor",
palette = "Greys",  #Select your color palette from the RColorBrewer presets or make your own.
title="Mapa de Arvore para fatores que aliviam a dor por nível de dor", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
library(foreign)
library(ggplot2)
library(MASS)
library(Hmisc)
install.packages("Hmisc")
dados
#mapa de arvore
library(treemap)
treemap(alivia, #Your data frame object
index=c("Pergunta"),  #A list of your categorical variables
vSize = "Proporção de sim",  #This is your quantitative variable
#type="index", #Type sets the organization and color scheme of your treemap
vColor = 1,
palette = "Greys",  #Select your color palette from the RColorBrewer presets or make your own.
#type = "value",
title="Mapa de Arvore para fatores que aliviam a dor em geral", #Customize your title
fontsize.title = 12 #Change the font size of the title
)
display.brewer.all()
library(Hmisc)
library(Hmisc)
library(reshape2)
View(dados)
fit_crazy <- polr(`Intensidade Dor` ~ `Mês da gravidez onde a dor começou` + `Idade da paciente` + `Altura da paciente (m)` + `Peso da paciente no início da gravidez (kg)` + `Peso no final da gravidez` + `Peso do bebê (kg)` + `Número de filhos anteriores à atual gravidez` + `A paciente teve dor nas costas em gravidezes anteriores?`, data = dados, Hess=TRUE)
summary(fit_crazy)
plot(fit_crazy)
fit_crazy$Hessian
fit_teste <- polr(`Intensidade Dor` ~ `Peso da paciente no início da gravidez (kg)`, data = dados, Hess = TRUE)
summary(fit_teste)
#teste para interpretações
fit_teste <- polr(`Intensidade Dor` ~ `Peso da paciente no início da gravidez (kg)`, data = dados, Hess = TRUE)
summary(fit_teste)
fit_teste2 <- polr(`Intensidade Dor` ~ `Peso da paciente no início da gravidez (kg)`, data = dados, Hess = TRUE,method = "logistic")
summary(fit_teste2)
summary(fit_teste)
summary(fit_teste2)
